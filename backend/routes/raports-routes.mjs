import express from 'express';
import moment from 'moment';
import fs from 'fs';

import { verifyAccessToken, hasRoleMiddleware } from '../general/auth-functions.mjs';
import { getRaport } from '../db/raport/sellment-close/get-raport.mjs';
import { generateRaport } from '../db/raport/sellment-close/generate-raport.mjs';
import { generateRaportPDF } from '../db/raport/sellment-close/generate-raport-pdf.mjs';
import { sendErrorMessage, sendSuccessMessage } from '../general/messages.mjs';
import { createLog } from '../db/logs.mjs';

const router = express.Router();

router.get('/sellment-close/raport-preview/:id', verifyAccessToken, async (req, res) => {
    const { id } = req.params;
    try {
        const data = await getRaport(id);
        sendSuccessMessage(res, data.raport);
    } catch (error) {
        sendErrorMessage(res, 404, 'Raport with provided id does not exist!');
    }
});

router.get('/sellment-close/raport-preview', verifyAccessToken, async (req, res) => {
    const data = await getRaport();
    sendSuccessMessage(res, data.raport);
});

router.get(
    '/sellment-close/generate-raport/:id',
    verifyAccessToken,
    (...args) => hasRoleMiddleware(...args, 'admin'),
    async (req, res) => {
        const { id } = req.params;

        try {
            const raport = await getRaport(id);
            const { date, number, year_number, id: raportId } = raport.raportInfo;

            const raportPath = await generateRaportPDF(raport.raport, date, number, year_number);
            const pdfFile = fs.readFileSync(raportPath);
            fs.rmSync(raportPath);

            await createLog('RAPORT_GENERATED', `Raport with id ${raportId} has been generated by user`, req.user.id);

            res.contentType('application/pdf');
            res.send(pdfFile);
        } catch (error) {
            sendErrorMessage(res, 404, 'Raport with provided id does not exist!');
        }
    }
);

router.get(
    '/sellment-close/generate-raport',
    verifyAccessToken,
    (...args) => hasRoleMiddleware(...args, 'admin'),
    async (req, res) => {
        const raportInfo = await generateRaport(req.user.id);

        if (!raportInfo) {
            return sendErrorMessage(res, 409, 'RAPORT_NOT_GENERATED');
        }

        const raport = await getRaport(raportInfo.id);
        const date = moment(raportInfo.date).format('DD.MM.YY');

        const raportPath = await generateRaportPDF(raport.raport, date, raportInfo.number, raportInfo.year_number);
        const pdfFile = fs.readFileSync(raportPath);
        fs.rmSync(raportPath);

        await createLog('RAPORT_GENERATED', `Raport with id ${raportInfo.id} has been generated by user`, req.user.id);

        res.contentType('application/pdf');
        res.send(pdfFile);
    }
);

export default router;
